openapi: '3.0.2'
info:
  title: API MyHome
  version: '1.0'
  description: |
    MyHome es una aplicacción que se centra en el uso de redes inmobiliarias con clientes permitiendo realizar
    operaciones tanto a usuarios como a inmobiliarias.

    ### LINKS:

    https://github.com/leoangel1994/App-Distribuidas
    https://swagger.io/blog/api-design/api-design-best-practices/#:~:text=There's%20no%20rule%20on%20keeping,advisable%20to%20keep%20collections%20plural.
    https://swagger.io/specification/
    https://www.restapitutorial.com/httpstatuscodes.html 


servers:
  - url: https://api.server.test/v1

tags:
  - name: realEstate
    description: Operaciones relacionadas con Inmobiliarias
  - name: users
    description: Operaciones relacionadas con Usuarios
  - name: homes
    description: Todo lo relacionado con propiedades inmobiliarias

paths:
  /realEstate:
    post:
      tags:
        - realEstate
      summary: Registrar una nueva cuenta de inmobiliaria
      description: Registrar una cuenta de inmobiliaria con los parametros
      operationId: addRealEstate
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DatosRegistroInmobiliaria'
      responses:
        '201':
          description: Cuenta registrada con éxito
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MensajeConfirmacion'
        '400':
          description: Bad Request. Datos de entrada inválidos
        '500':
          description: Internal Server Error. Error en el servidor

  /realEstate/{realEstateId}:
    put:
      tags:
        - realEstate
      summary: Editar los datos de una inmobiliaria existente
      operationId: updateRealEstate
      parameters:
        - name: realEstateid
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DatosRegistroInmobiliaria'
      responses:
        '200':
          description: Datos de la inmobiliaria editados con éxito
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MensajeConfirmacion'
        '400':
          description: Bad Request. Datos de entrada inválidos
        '401':
          description: Unauthorized. No autorizado para editar esta inmobiliaria
        '500':
          description: Internal Server Error. Error en el servidor

    delete:
      tags:
        - realEstate
      summary: Eliminar la cuenta de una inmobiliaria
      operationId: deleteRealEstate
      parameters:
        - name: realEstateId
          in: path
          required: true
          schema:
            type: string

      responses:
        '204':
          description: Cuenta de la inmobiliaria cerrada con éxito
        '401':
          description: Unauthorized. No autorizado para cerrar esta cuenta
        '500':
          description: Internal Server Error. Error en el servidor

  /realEstate/login:
    post:
      tags:
        - realEstate
      summary: Iniciar sesión como una inmobiliaria registrada
      operationId: loginRealEstate
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DatosRegistroInmobiliaria'
      responses:
        '200':
          description: Inicio de sesión exitoso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenAutenticacion'
        '401':
          description: Unauthorized. Credenciales incorrectas
        '500':
          description: Internal Server Error. Error en el servidor

  /realEstate/logout:
    get:
      tags:
        - realEstate
      summary: Deslogea a la inmobiliaria actualmente logeado
      description: ''
      operationId: logoutRealEstate
      parameters: []
      responses:
        default:
          description: successful operation
    
  /users:
    post:
      tags:
        - users
      summary: Registrar un nuevo usuario 
      description: Registrar un usuario público utilizando Google
      operationId: createUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DatosRegistroUsuarioPublico'
      responses:
        '200':
          description: Registro exitoso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenAutenticacionGoogle'
        '400':
          description: Bad Request. Datos de entrada inválidos
        '500':
          description: Internal Server Error. Error en el servidor

  /users/{username}:
    put:
      tags:
        - users
      summary: Editar los datos del perfil del usuario público
      operationId: updateUser
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DatosPerfilUsuarioPublico'
      responses:
        '200':
          description: Datos del perfil del usuario editados con éxito
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MensajeConfirmacion'
        '400':
          description: Bad Request. Datos de entrada inválidos
        '401':
          description: Unauthorized. No autorizado para editar este perfil
        '500':
          description: Internal Server Error. Error en el servidor

    delete:
      tags:
        - users
      summary: Dar de baja la cuenta de un usuario público
      operationId: deleteUser
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Cuenta de usuario público dada de baja con éxito
        '401':
          description: Unauthorized. No autorizado para dar de baja esta cuenta
        '500':
          description: Internal Server Error. Error en el servidor
    
  /users/login:
    post:
      tags:
        - users
      summary: Iniciar sesión con un usuario registrado
      operationId: loginUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DatosRegistroUsuarioPublico'
      responses:
        '200':
          description: Inicio de sesión exitoso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenAutenticacionGoogle'
        '401':
          description: Unauthorized. Credenciales incorrectas
        '500':
          description: Internal Server Error. Error en el servidor 
   
   
  /users/logout:
    get:
      tags:
        - realEstate
      summary: Deslogea al usuario actualmente logeado
      description: ''
      operationId: logoutRealEstate
      parameters: []
      responses:
        default:
          description: successful operation
  /homes:
    get:
      tags:
        - homes
      summary: Listar propiedades cercanas a la ubicación del usuario, aplicando filtros de búsqueda
      operationId: getHomes
      parameters:
        - name: ventaOAlquiler
          in: query
          required: false
          schema:
            type: string
        - name: tipoPropiedad
          in: query
          required: false
          schema:
            type: string
        - name: provincia
          in: query
          required: false
          schema:
            type: string
        - name: localidad
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Lista de propiedades que coinciden con los filtros
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Home'
        '500':
          description: Internal Server Error. Error en el servidor

  /homes/{homeId}/contact:
    post:
      tags:
        - homes
      summary: Contactar a la inmobiliaria que publicó una propiedad
      operationId: getHomes
      parameters:
        - name: homeId
          in: path
          description: ID de la propiedad a contactar
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DatosContactoPropiedad'
      responses:
        '200':
          description: Mensaje de contacto enviado con éxito
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MensajeConfirmacion'
        '400':
          description: Bad Request. Datos de entrada inválidos
        '500':
          description: Internal Server Error. Error en el servidor

  /homes/{homeId}/reservations:
    post:
      tags:
        - homes
      summary: Permitir la reserva de una propiedad (pago ficticio)
      operationId: createPropertyReservation
      parameters:
        - name: homeId
          in: path
          description: ID de la propiedad a reservar
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DatosReservaPropiedad'
      responses:
        '200':
          description: Reserva de propiedad realizada con éxito
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MensajeConfirmacion'
        '400':
          description: Bad Request. Datos de reserva inválidos
        '500':
          description: Internal Server Error. Error en el servidor

  /homes/{homeId}/reviews:
    post:
      tags:
        - homes
      summary: Permitir que los usuarios califiquen y dejen comentarios sobre una inmobiliaria
      operationId: createReview
      parameters:
        - name: homeId
          in: path
          description: ID de la propiedad a calificar y comentar
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DatosCalificacionComentario'
      responses:
        '200':
          description: Calificación y comentario agregados con éxito
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MensajeConfirmacion'
        '400':
          description: Bad Request. Datos de calificación y comentario inválidos
        '500':
          description: Internal Server Error. Error en el servidor

  /homes/saved:
    get:
      tags:
        - homes
      summary: Obtener la lista de propiedades favoritas de un usuario
      operationId: getSavedHomes
      responses:
        '200':
          description: Lista de properties favoritas
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Home'
        '500':
          description: Internal Server Error. Error en el servidor


components:
  schemas:
    MensajeConfirmacion:
      type: object
      properties:
        mensaje:
          type: string

    DatosRegistroInmobiliaria:
      type: object
      properties:
        id:
          type: integer
          format: integer64
        realEstateId:
          type: string
        nombreFantasia:
          type: string
        direccionCorreo:
          type: string
        contrasena:
          type: string
      required:
        - nombreFantasia
        - direccionCorreo
        - contrasena
        
    TokenAutenticacion:
      type: object
      properties:
        token:
          type: string
        id:
          type: string

    TokenAutenticacionGoogle:
      type: object
      properties:
        token:
          type: string
        id:
          type: string
          
    Home:
      type: object
      properties:
        id:
          type: integer
          format: int64
        homeId:
          type: string
        direccion:
          type: object
          properties:
            calle:
              type: string
            numero:
              type: string
            piso:
              type: string
            dto:
              type: string
            barrio:
              type: string
            localidad:
              type: string
            provincia:
              type: string
            pais:
              type: string
        geolocalizacion:
          type: object
          properties:
            latitud:
              type: number
            longitud:
              type: number
        tipoPropiedad:
          type: string
        metrosCuadrados:
          type: object
          properties:
            cubiertos:
              type: number
            semidescubiertos:
              type: number
            descubiertos:
              type: number

    DatosRegistroUsuarioPublico:
      type: object
      properties:
        datosGoogle:
          type: object
          

    DatosPerfilUsuarioPublico:
      type: object
      properties:
        id:
          type: integer
          format: integer64
        username:
          type: string
        datosGoogle:
          type: object
      

    DatosContactoPropiedad:
      type: object
      properties:
        mensaje:
          type: string
        fecha:
          type: string
        turno:
          type: string

    DatosReservaPropiedad:
      type: object
      properties:
        montoAlquiler:
          type: number

    DatosCalificacionComentario:
      type: object
      properties:
        calificacion:
          type: number
        comentario:
          type: string
          

